Тестовое задание. Написать функцию формирования sql-запросов (MySQL) из шаблона и значений параметров.

Места вставки значений в шаблон помечаются вопросительным знаком, после которого может следовать спецификатор преобразования.
Спецификаторы:
?d - конвертация в целое число
?f - конвертация в число с плавающей точкой
?a - массив значений
?# - идентификатор или массив идентификаторов

Если спецификатор не указан, то используется тип переданного значения, но допускаются только типы string, int, float, bool (приводится к 0 или 1) и null.
Параметры ?, ?d, ?f могут принимать значения null (в этом случае в шаблон вставляется NULL).
Строки и идентификаторы автоматически экранируются.

Массив (параметр ?a) преобразуется либо в список значений через запятую (список), либо в пары идентификатор и значение через запятую (ассоциативный массив).
Каждое значение из массива форматируется в зависимости от его типа (идентично универсальному параметру без спецификатора).

Также необходимо реализовать условные блоки, помечаемые фигурными скобками.
Если внутри условного блока есть хотя бы один параметр со специальным значением, то блок не попадает в сформированный запрос.
Специальное значение должно возвращаться методом skip. Нужно выбрать подходящее значение на своё усмотрение.
Условные блоки не могут быть вложенными.

При ошибках в шаблонах или значениях выбрасывать исключения.

Для упрощения задачи предполагается, что в передаваемом шаблоне не будут использоваться комментарии sql.

В файле Database.php находится заготовка класса с заглушками в виде исключений. Нужно реализовать методы buildQuery и skip.
В файле DatabaseTest.php находятся примеры (тесты). Тесты обязательно должны быть успешными (в противном случае код рассматриваться не будет).

Код должен работать с php 8.3.


ОТ РАЗРАБОТЧИКА
В данном примере не было попытки сделать парсер или валидатор SQL-запросов, у пользователя данной библиотеки остается возможность допускать ошибки, которые будут обнаружены СУБД при выполнении запросов.

Здесь проверяется пользование только теми немногими синтаксическими возможностями, которые заложены в шаблоны, а именно:
 - подготовка мест вставок для значений
 - разметка части запроса как условный блок, наличие которого в результирующем запросе зависит от того был ли вазван метод skip для определения любого из параметров

При проектировании данного решения были приняты дополнительные ограничения ввиду отсутствия явных директив в задании:
 - возможности шаблонов не распространяются на значения строковых литералов т.е. все что написано внутри кавычек (одинарных или двойных) остается там в неизменном виде
 - местами для вставок считаются только ?, ?d, ?f, ?#, ?a; например, если в запросе встретится что-то вроде "?etc", то не будет попытки интерпретировать это как место для вставки с "кодом" etc и последующей ошибкой что не найдена вставка для кода "etc"; на место вопросительного знака будет вставка из соответствующего переданного параметра и далее в результирующем запросе будет строка "etc"
 - вставка float сделана максимально просто: если php решит что значение должно быть представлено в scientific notation (1.0E-7), то такое значение попадет в SQL запрос

 Еще замечания
  - я закомментировал создание и использование подключение в БД в коде и тестах; для данного примера оно не необходимо; возможно его можно было бы использовать для экранирования строк в StringForamatter, но экраниарование строк я сделал тоже максимально просто
  - добавил несколько примеров в тесты включая примеры где выбрасывается исключение; надеюсь это не помешает вам увидеть результат тестов

